#include "Header.h"

//Функция подсчета длины числа
int LEN(int a) {
	int len = 0;
	if (a < 0)
		a = ~a + 1;
	do {
		len++;
		a /= 10;
	} while (a > 0);
 // пока а != 0 длину увеличиваем на 1, а от числа отрезаем последную цифру

	return len;
}

// Функция подсчета количество  числел, квадрат которых оканчивается на 6 и состоит не менее чем из 3 цифр
	int count_square63(int a) {
	int len = LEN(a * a); // Длина числа

	return (len >= 3 && (a * a % 10 == 6)); // Условие: длина >= 3 и последния цивра равна 6
}

// Функция подсчета максимальной суммы крайних цифр у числа
int sun_extreme(int a, int b){
	if (a < 0)
		a = ~a + 1;

	int s_k = a % 10 + a / pow(10, LEN(a) - 1); // сумма крайних чисел
	return (s_k > b) ? s_k : b;                   // Тернарный опереатор выявления максимальной суммы
}

// функция возведения в квадрат целого числа не использующая умножение
int square(int n) {
	if (n < 0)
		n = ~n + 1;
	return n ? square(n - 1) + n + n - 1 : 0;
}

// Функция ошибок (интеграл вероятностей)
long double decomposition(float x, float eps) {

	int i = 1;            // индексация

	float el =  x;	    // i элемент 
	float sum = 0;     // сумма

	cout << "--------" << endl;
	while (abs(el) > eps) {     // пока не достигнем нужной точности
		sum += el;             // сумматор

		el *= -(x * x * (2 * i - 1) / (2 * i * i + i));  // число, которое переводит xi в x(i+1)
		i++;
	}
	
	return  2. / sqrt(M_PI) * sum; // итоговая сумма
}

